<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:tx="http://www.springframework.org/schema/tx"
	    xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
		  http://www.springframework.org/schema/beans  
		  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		  http://www.springframework.org/schema/context  
		  http://www.springframework.org/schema/context/spring-context-3.0.xsd
		  http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/util 
		  http://www.springframework.org/schema/util/spring-util-3.0.xsd"
		default-autowire="byName">
		
	<!-- 对包中的所有controller类进行扫描，以完成Bean创建和自动依赖注入的功能 -->  
	<context:component-scan base-package="com.ei.itop.**" />
	<context:component-scan base-package="com.ailk.dazzle.util.**" />
	<context:property-placeholder location="classpath:database.properties" />
	
	<!-- 引入数据库配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
		destroy-method="close" lazy-init="true"> 
	   <property name="driverClassName" value="${${dbType}_driver}"/> 
	   <property name="url" value="${${dbType}_url}" /> 
	   <property name="maxActive" value="${maxActiveConns}" />
	   <property name="maxIdle" value="${maxIdleConns}" />
	   <property name="initialSize" value="${initialConns}" />
	   <property name="username" value="${${dbType}_username}" /> 
	   <property name="password" value="${${dbType}_password}" /> 
	   <property name="validationQuery" value="${${dbType}_validationQuery}"/>  
	   <property name="logAbandoned" value="false"/>  
	   <property name="removeAbandoned" value="${removeAbandoned}"/>
	   <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
	   <property name="testOnBorrow" value="${testOnBorrow}"/> 
	   <property name="testWhileIdle" value="${testWhileIdle}"/> 
	   <property name="testOnReturn" value="${testOnReturn}"/>   
	</bean>
	
	<!-- 整合ibatis -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocations">
			<list>
				<description>排序：优先加载数据库表的sql定义（文件名带model字样），使得后续加载的自定义sql定义可以引用先加载的文件中的定义
				</description>
				<value>classpath:sqlmap-config.xml</value>
			</list>
		</property>
		<property name="mappingLocations">
			<list>
				<!-- <value>classpath:sys/sql/${dbType}/**/*_SqlMap.xml</value> -->
			</list>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="sqlMapClientTemplate" class="com.ailk.dazzle.util.ibatis.ExtSqlMapClientTemplate" primary="true">
		<property name="sqlMapClient" ref="sqlMapClient"/>
		<property name="sqlExecutor">
			<bean class="com.ailk.dazzle.util.ibatis.ExtSqlExecutor">
				<property name="sqlHandlers">
					<list>
						<bean class="com.ailk.dazzle.util.ibatis.PagingSqlHandler"/>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
			<ref bean="dataSource"/>
		</property>
    </bean>

    <!-- 事务配置 AOP声明方式-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="MBL*" propagation="REQUIRED" rollback-for="Throwable" /> 
			<tx:method name="*" read-only="true" /> 
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="sysService" expression="execution(* com.ei.*..service.*.*(..))"/>
		<aop:advisor pointcut-ref="sysService" advice-ref="txAdvice" />
	</aop:config>
	
	<bean id="app.siCommonDAO" class="com.ailk.dazzle.util.ibatis.GenericDAOImpl4Spring">
	</bean>
	
</beans>
